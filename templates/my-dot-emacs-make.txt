; -*- mode: Emacs-Lisp; -*-

(setq visible-bell t)

(when window-system (tool-bar-mode 0))

(setq version-control t)
(setq delete-old-versions t)

(defvar local-dir "~/.thy/elisp")
(setq load-path (append (list "." local-dir) load-path ))

;;;;;;;;;;;;;;;;

(setq running-emacs-22+ (and (> emacs-major-version 22)(< emacs-major-version 23)))

(setq x-select-enable-clipboard t)
(if running-emacs-22+ (setq interprogram-paste-function 'x-cut-buffer-or-selection-value))

;;;;;;;;;;;;;;;;

(set-default 'header-line-format '((96 "%f") (server-name (" + " server-name))))
(set-face-foreground 'header-line "red")

(setq frame-title-format
      '(multiple-frames
	("%b" (server-name ("+" server-name)))
	("" invocation-name "@" system-name (server-name ("+" server-name)))))

;(cond ((equal server-name "epi") (set-face-foreground 'modeline "red")))

;;;;;;;;;;;;;;;;

(setq browse-url-browser-function 'browse-url-firefox)

;;ifdef(`BIG',`
;;(setq my-font "Monospace-11")
;;',`
;;(setq my-font "Monospace-13")
;;')
;;(setq my-font "Monospace-9")

;;(when window-system
;;  (setq
;;   my-font
;;   (cond
;;    ((equal system-name "thy.liancourt.gnet") "Monospace-9")
;;    ((equal system-name "thy-key") "Monospace-9")
;;    ((equal system-name "thyp") "Monospace-9")
;;    ((equal system-name "thyz") "Monospace-8")
;;    ((equal system-name "ubuntu.liancourt.gnet") "Monospace-9")
;;    ((> (x-display-pixel-width) 1600) "Monospace-13")
;;    ((< (x-display-pixel-width) 1024) "Monospace-9")
;;    (t "Monospace-9")
;;    (t "Monospace-11")
;;    ))
;;
;;  (set-frame-width
;;   (selected-frame)
;;   (cond
;;    ((equal system-name "thyz") 120)
;;    (t 132)
;;    ))
;;
;;(set-frame-width (selected-frame) 132)
;;
;;  (set-frame-height
;;   (selected-frame)
;;   (cond
;;    ((equal system-name "thy.liancourt.gnet") 46)
;;    ((equal system-name "thy-key") 46)
;;    ((equal system-name "thyp") 46)
;;    ((equal system-name "thyz") 28)
;;    ((equal system-name "ubuntu.liancourt.gnet") 46)
;;    ((>= (x-display-pixel-height) 1200) 60)
;;    ((<= (x-display-pixel-height) 600) 42)
;;    (t 40)
;;    (t 48)
;;    ))
;;  )
;;
;;  (set-frame-height (selected-frame) 40)
;;
;;(if (and (> emacs-major-version 22) window-system)
;;    (progn
;;      (set-default-font my-font)
;;      )
;;  )

(when window-system
  (set-frame-width (selected-frame) 132)
  (set-frame-height (selected-frame) 48)
)

;; emacs --daemon=thy
;; emacs --daemon=root
;;
;; emacsclient -s thy -c
;; emacsclient -s thy -t
;;
;; sudo emacsclient -s root -c
;; sudo emacsclient -s root -t

(progn
  (add-to-list 'initial-frame-alist '(width  . 132))
  (add-to-list 'initial-frame-alist '(height . 48))
  (add-to-list 'default-frame-alist '(width  . 132))
  (add-to-list 'default-frame-alist '(height . 48)))

(defun epi ()
  (set-variable 'server-name "epi")
  (server-start))

(defun thy ()
  (set-variable 'server-name "thy")
  (server-start))

(defun sroot ()
  (set-variable 'server-name "root")
  (server-start))


(setq inhibit-startup-message t)

(defun reload-ssh-env () (interactive) (load-file "~/.ssh.el"))
(defun my-buffer-file-name () (interactive) (describe-variable 'buffer-file-name))

;;;;;;;;;;;;;;;;

(progn
  (global-set-key "\C-x\C-b" 'electric-buffer-list)
  (global-set-key "%" 'goto-match-paren)

  (global-set-key "\C-o" (make-keymap))

  (global-set-key "\C-o\C-b" 'ibuffer)

  (global-set-key "\C-o\C-f" 'global-font-lock-mode)

  (global-set-key "\C-o\C-i" 'text-scale-decrease)
  (global-set-key "\C-o\C-p" 'text-scale-increase)

  (global-set-key "\C-o\C-g" 'revert-buffer)
  (global-set-key "\C-o\C-o" 'open-line)

  (global-set-key "\C-o\C-m" 'mmm-parse-buffer)

  (global-set-key "\C-o\C-h" 'menu-bar-mode)
  (global-set-key "\C-o\C-e" 'menu-bar-enable-clipboard)
  (global-set-key "\C-o\C-c" 'clipboard-kill-ring-save)
  (global-set-key "\C-o\C-v" 'clipboard-yank)

  (global-set-key "\C-o\C-r" 'point-to-register)
  (global-set-key "\C-o\C-j" 'jump-to-register)

  (global-set-key "\C-o\C-h" 'reload-ssh-env)
  (global-set-key "\C-o\C-n" 'my-buffer-file-name)

  (global-set-key "\C-oa" 'auto-fill-mode)
  (global-set-key "\C-ob" 'bury-buffer)
  (global-set-key "\C-oc" 'compile)
  (global-set-key "\C-od" 'apt-utils-show-package)
  (global-set-key "\C-oe" 'add-change-log-entry)
  (global-set-key "\C-of" 'fill-region)
  (global-set-key "\C-og" 'grep)
  (global-set-key "\C-oh" t)
  (global-set-key "\C-oi" 'send-invisible)
  (global-set-key "\C-oj" t)
  (global-set-key "\C-ok" 'kill-compilation)
  (global-set-key "\C-ol" 'goto-line)
  (global-set-key "\C-om" 'man)
  (global-set-key "\C-on" t)
  (global-set-key "\C-oo" 'wdired-change-to-wdired-mode)
  (global-set-key "\C-op" 'transpose-chars)
  (global-set-key "\C-oq" 'todo-show)
  (global-set-key "\C-or" 'rename-buffer)
  (global-set-key "\C-os" 'shell)
  (global-set-key "\C-ot" 'toggle-truncate-lines)
  (global-set-key "\C-ou" t)
  (global-set-key "\C-ov" t)
;  (global-set-key "\C-ow" 'toggle-rot13-mode)
  (global-set-key "\C-ow" 'mouse-wheel-mode)
  (global-set-key "\C-oy" t)
  (global-set-key "\C-oz" 'xterm-mouse-mode)

  (global-set-key "\C-o0" 'isearch-forward)
  (global-set-key "\C-o1" 'query-replace)
  (global-set-key "\C-o2" 'query-replace-regexp)
  (global-set-key "\C-o3" 'replace-string)
  (global-set-key "\C-o4" 'replace-regexp)
  (global-set-key "\C-o5" 'edit-last-kbd-macro)

  (global-set-key "\C-o'" 'iso-accents-mode)
  (global-set-key "\C-o/" 'shell-filename-complete)
  (global-set-key "\C-o=" 'scroll-left)
  (global-set-key "\C-o-" 'scroll-right)

;  (global-set-key (kbd "<mouse-4>") 'down-slightly)
;  (global-set-key (kbd "<mouse-5>") 'up-slightly)
;  (global-set-key (kbd "<mouse-4>") 'next-line)
;  (global-set-key (kbd "<mouse-5>") 'previous-line)
  (global-set-key (kbd "<mouse-4>") 'mwheel-scroll)
  (global-set-key (kbd "<mouse-5>") 'mwheel-scroll)

  t
  )

;;;;;;;;;;;;;;;;

(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
     (global-set-key "\C-cl" 'org-store-link)
     (global-set-key "\C-ca" 'org-agenda)
     (global-set-key "\C-cb" 'org-iswitchb)

;;;;;;;;;;;;;;;;

(autoload 'shell-filename-complete "filecomp" t)
(autoload 'goto-match-paren "goto-match-paren" t)

;;;;;;;;;;;;;;;;

(load "dired")

(load "dired-add")

(require 'dired-x)
(setq-default dired-omit-files-p t)
(setq dired-local-variables-file ".dired")

(define-key dired-mode-map "\C-o" nil)
(define-key dired-mode-map "\M-\C-o" 'dired-display-file)
(define-key dired-mode-map "\C-\M-y" 'dired-do-load)


(load "erin")

(require 'mouse)
(require 'mwheel)

;; https://bugs.launchpad.net/ubuntu/+source/ccrypt/+bug/541947
;; (setq load-path (cons "/usr/share/emacs/site-lisp/ccrypt" load-path))
;; (require 'jka-compr-ccrypt "jka-compr-ccrypt.el")

;; http://sourceforge.net/tracker/index.php?func=detail&aid=1538826&group_id=40913&atid=429289
(require 'ps-ccrypt "ps-ccrypt.el")


(setq-default ispell-program-name "aspell")

(require 'generic-x)

(autoload 'adoc-mode "adoc-mode")

(require 'jinja2-mode)

; http://www.emacswiki.org/emacs/TrampMode

(setq tramp-default-method "ssh")

; aptitude install mmm-mode

(require 'mmm-mode)
(require 'mmm-auto)
(setq mmm-global-mode 'guess)

(mmm-add-classes
 '((embedded-rst
    :submode rst-mode
    :face mmm-declaration-submode-face
    :front "^ *\\.\\. {"
    :back "^ *\\.\\. }")))

(mmm-add-classes
 '((embedded-yaml
    :submode yaml-mode
    :face mmm-declaration-submode-face
    :front "^---$"
    :back "^\\.\\.\\.$")))

(mmm-add-classes
 '((embedded-m4
    :submode m4-mode
    :face mmm-declaration-submode-face
    :front "^ *ifelse\(start\)"
    :back "^ *ifelse\(end\)")))

(autoload 'markdown-mode "markdown-mode"
   "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

(require 'generic-x)
(add-to-list 'auto-mode-alist '("\\..*ignore$" . hosts-generic-mode))

;;(custom-set-variables
;; ;; custom-set-variables was added by Custom.
;; ;; If you edit it by hand, you could mess it up, so be careful.
;; ;; Your init file should contain only one such instance.
;; ;; If there is more than one, they won't work right.
;; '(safe-local-variable-values
;;   (quote
;;    ((electric-indent-mode)
;;     (dired-omit-files . "\\.html$")
;;     (dired-omit-files . "^[[:digit:]]\\{3\\}\\|^upgrades.yml$")
;;     (dired-omit-files . "^[[:digit:]]\\{3\\}|upgrades.yml")
;;     (dired-omit-files . "\\.yml$")
;;     (dired-omit-files . "\\.gitconfig|\\.gitremote$")
;;     (dired-omit-files . "\\.git..*|\\.hg..*$")
;;     (TeX-master . t)
;;     (dired-omit-files . "\\.svg$")
;;     (dired-omit-files . "^try.*")
;;     (dired-omit-files . "yaml\\.rst$\\|yaml\\.rst\\..*$\\|mail\\.yaml$\\|notes.yaml$")
;;     (dired-omit-files . "yaml\\.rst$\\|\\.html$")
;;     (dired-omit-files . "\\.log$\\|\\.aux$\\|\\.tns$")
;;     (encoding . utf-8)
;;     (dired-omit-files . "/")
;;     (mmm-classes embedded-yaml)
;;     (dired-omit-mode . t)
;;     (dired-omit-files . "^[[:digit:]]\\{3\\}")
;;     (dired-omit-files . "yml\\.rst$\\|yml\\.rst\\..*$\\|mail\\.yml$\\|notes.yml$")
;;     (dired-omit-files . "yml\\.rst$\\|\\.html$")
;;     (dired-omit-mode)
;;     (mmm-classes embedded-rst embedded-m4)
;;     (mmm-classes . embedded-rst)
;;     (todo-categories "Todo" "Todo" "Todo" "Todo")))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(safe-local-variable-values
   (quote
    ((dired-omit-files . "^[[:digit:]]\\{3\\}")
     (dired-omit-files . "yaml\\.rst$\\|yaml\\.rst\\..*$\\|mail\\.yaml$\\|notes.yaml$")
     (dired-omit-files . "yaml\\.rst$\\|\\.html$")
     (dired-omit-files . "yml\\.rst$\\|\\.html$")
     (mmm-classes embedded-rst embedded-m4)
     (dired-omit-files . "\\.html$")))))
